# -*- coding: utf-8 -*-
# @Time : 2021/02/02 12:11
# @Author : Lim Yoona
# @Site : 
# @File : 01_gc.py
# @Software: PyCharm

""""""

"""
    1. 小整数对象池
        1.1 整数在程序中使用非常广泛，python为了优化速度，使用小整数对象池，避免为整数频繁申请和销毁内存空间。
        1.2 小整数池的定义范围：[-5,257)已提前建立好，不hi被垃圾回收，所有位于这个范围内的都是同一个对象
        1.3 单个字母也是如此
        1.4 当定义两个相同的字符串时，引用计数为0，触发垃圾回收
"""
a = 2
b = 2
print(id(a))
print(id(b))


"""
    2. 大整数对象池
        每个大整数，均会创建一个新的对象(3.9这个不成立)
"""
a = 2123123
b = 2123123
print(id(a))
print(id(b))

"""
    3. intern机制
        当出现定义了同一个字符串内容的多个对象，其实在内存中只是创建了一次，
        变量名引用了这个字符串的地址，同时通过引用计数器来维护这个字符串区域的释放
        当所有对象全都删除了之后，再次重新创建，那么其在内存中重新开辟了一个新的内存空间，其引用地址对发生变化
"""


"""
    总结
        1.小整数[-5,257)共用对象，常驻内存
        2.单个字符共用对象，常驻内存
        3.单个单词，不可修改，默认开启intern机制，共用对象，引用计数为0，则销毁
        4.字符串（含有空格），不可修改，没开启intern机制，不共用对象，引用计数为0，销毁
        5.数值类型和字符串类型在 Python 中都是不可变的，这意味着你无法修改这个对象的值，每次对变量的修改，实际上是创建一个新的对象
"""