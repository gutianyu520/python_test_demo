# -*- coding: utf-8 -*-
# @Time : 2021/02/01 17:41
# @Author : Lim Yoona
# @Site : 
# @File : 06-bit.py
# @Software: PyCharm

"""
    进制、位运算
"""
"""进制间转换"""
#10进制转为2进制
print(bin(10))
#2进制转为10进制
print(int("1001",2))
#10进制转为16进制
print(hex(10))
#16进制到10进制
print(int('ff',16))
print(int('0xab', 16))
#16进制到2进制
print(bin(0xab))
#10进制到8进制
print(oct(8))
#2进制到16进制
print(hex(0b1001))

"""
    4. 位运算
    位运算的介绍
        1.& 按位与
        2.| 按位或
        3.^ 按位异或
        4.~ 按位取反
        5.<< 按位左移
        6.>> 按位右移
"""
print(1<<3)

print(0b1001 & 0b0110)
print(0b1001 | 0b0110)
print(0b1001 ^ 0b0010)
print(~0b1001)
"""
    【为什么9取反变成了-10的说明】：
        9的原码 ==> 0000 1001 因为正数的原码=反码=补码，所以在 真正存储的时候就是0000 1001
        接下来进行对9的补码进行取反操作        
        进行取反==> 1111 0110 这就是对9 进行了取反之后的补码       
        既然已经知道了补码，那么接下来只要转换为 咱们人能识别的码型就可以，因此按照规则 ，把这个1111 0110 这个补码 转换为原码即可        
        符号位不变，其它位取反==> 1000 1001       
        然后+1 ，得到原码 =======>1000 1010 这就是 -10
"""

"""
    【扩展】
        1)任何数和1进行&操作,得到这个数的最低位 数字&1 = 数字的二进制形式的最低位
        2)位运算优先级
"""